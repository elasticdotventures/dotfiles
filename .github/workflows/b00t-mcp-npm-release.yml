name: 🥾 b00t-mcp NPM Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'feat/npm-package-b00t-mcp'
      - 'main'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.7.1)'
        required: true
        type: string
      publish:
        description: 'Publish to NPM (only enable for releases)'
        required: false
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-binaries:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu  
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: 🔧 Fix corrupted Cargo.lock
        run: |
          rm -f Cargo.lock
          cargo check --package b00t-mcp

      - name: 🗂️ Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: 🔧 Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: 🔨 Build binary
        run: |
          cargo build --release --target ${{ matrix.target }} --package b00t-mcp
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: 📦 Create archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            BINARY="b00t-mcp.exe"
          else
            BINARY="b00t-mcp"
          fi
          
          tar -czf ../../../b00t-mcp-${{ matrix.target }}.tar.gz "$BINARY"

      - name: 📤 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: b00t-mcp-${{ matrix.target }}
          path: b00t-mcp-${{ matrix.target }}.tar.gz

  npm-publish:
    name: 📦 Publish to NPM
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 🗂️ Organize binaries
        run: |
          mkdir -p b00t-mcp-npm/releases
          find artifacts -name "*.tar.gz" -exec cp {} b00t-mcp-npm/releases/ \;
          ls -la b00t-mcp-npm/releases/

      - name: 📝 Update package.json version
        if: github.event.inputs.version
        run: |
          cd b00t-mcp-npm
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: 📝 Update package.json version from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd b00t-mcp-npm
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
          npm version $VERSION --no-git-tag-version

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: |
          cd b00t-mcp-npm
          npm ci

      - name: 🧪 Test package
        run: |
          cd b00t-mcp-npm
          npm test || echo "Tests failed but continuing..."

      - name: 🚀 Publish to NPM
        if: startsWith(github.ref, 'refs/tags/') || github.event.inputs.publish == 'true'
        run: |
          cd b00t-mcp-npm
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📋 Dry-run publish (for testing)
        if: "!startsWith(github.ref, 'refs/tags/') && github.event.inputs.publish != 'true'"
        run: |
          cd b00t-mcp-npm
          npm publish --dry-run

      - name: 📋 Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 🥾 b00t-mcp ${{ github.ref_name }}
          body: |
            ## 🥾 b00t-mcp Release ${{ github.ref_name }}
            
            ### 📦 Installation
            
            ```bash
            npm install -g b00t-mcp
            # or
            npx b00t-mcp --help
            # or  
            bunx b00t-mcp --help
            ```
            
            ### 🎯 Supported Platforms
            
            - Linux x64/ARM64
            - macOS x64/ARM64 (Intel/Apple Silicon)  
            - Windows x64/ARM64
            
            ### 📋 What's Changed
            
            See [CHANGELOG.md](https://github.com/elasticdotventures/dotfiles/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false

      - name: 📤 Upload release binaries
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          for file in b00t-mcp-npm/releases/*.tar.gz; do
            gh release upload ${{ github.ref_name }} "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}