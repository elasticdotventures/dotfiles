{{- range .Values.mcpServers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "b00t-mcp.fullname" $ }}-{{ .name }}
  labels:
    {{- include "b00t-mcp.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "b00t-mcp.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ .name }}
  template:
    metadata:
      labels:
        {{- include "b00t-mcp.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ .name }}
    spec:
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      containers:
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          {{- if .command }}
          command: {{ .command | toJson }}
          {{- end }}
          {{- if .args }}
          args: {{ .args | toJson }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .port | default 3000 }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: MCP_SERVER_NAME
              value: {{ .name | quote }}
            {{- range .env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/.cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      restartPolicy: Always
{{- end }}